package com.CognitiveBox {	import flash.display.MovieClip;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.text.TextFieldAutoSize;	import flash.events.MouseEvent;		public class TopicList extends MovieClip {				private var topicMC:MovieClip;		private var topicTxt:TextField;		private var txtFormat:TextFormat;		private var rowIndex:int;		private var colIndex:int;		private var slideIndex:int;		public function TopicList() {			init();		}				private function init():void {			addToList();		}				private function addToList():void {			topicMC = new MovieClip();						topicMC.mouseChildren = false;			//topicMC.buttonMode = true;						addChild(topicMC);		}				public function insertContent(t:String,bt:Boolean = false):void {			topicTxt = new TextField();			setTxtProperties(bt);			topicTxt.text = t;			topicMC.addChild(topicTxt);			if (bt == false) {				topicMC.addEventListener(MouseEvent.MOUSE_OVER, doMouseOver);			}		}				public function setRowColIndex(r:int,c:int, i:int):void {			rowIndex = r;			colIndex = c;			slideIndex = i;		}				public function getRowColIndex():String {			var rowColIndex:String;			rowColIndex = rowIndex.toString() + colIndex.toString();			return rowColIndex;		}				public function getRowIndex():int {			return rowIndex;		}				public function getColIndex():int {			return colIndex;		}				public function getSlideIndex():int {			return slideIndex;		}		private function setTxtProperties(bt:Boolean = false):void {			txtFormat = new TextFormat();			txtFormat.align = "left";			txtFormat.color = "0x000000";			txtFormat.size = 14;			txtFormat.font = "Arial, Helvetica, sans-serif";						topicTxt.defaultTextFormat = txtFormat;			topicTxt.multiline = false;			topicTxt.wordWrap = false;			topicTxt.condenseWhite = true;			topicTxt.selectable = false;			topicTxt.mouseEnabled = false;			topicTxt.autoSize = TextFieldAutoSize.LEFT;			if (bt == true) {				topicTxt.x = 0;			} else {				topicTxt.x = 20;			}					}				private function doMouseOver(event:MouseEvent):void {			topicTxt.textColor = 0x54A3DA;			topicMC.addEventListener(MouseEvent.MOUSE_OUT, doMouseOut);		}				private function doMouseOut(event:MouseEvent):void {			topicTxt.textColor = 0x000000;			topicMC.removeEventListener(MouseEvent.MOUSE_OUT, doMouseOut);		}	}	}